"""added base db table for every table

Revision ID: 213ee512e74b
Revises: cc6153f78f50
Create Date: 2025-04-28 15:19:25.884728

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '213ee512e74b'
down_revision: Union[str, None] = 'cc6153f78f50'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('indent_id', table_name='Payments')
    op.drop_index('transaction_id', table_name='Payments')
    op.drop_table('Payments')
    op.add_column('Coupons', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.drop_column('Coupons', 'is_archieved')
    op.add_column('Courses', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('Enrollments', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('Lectures', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.drop_column('Lectures', 'is_archieved')
    op.add_column('Modules', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.drop_column('Modules', 'is_archieved')
    op.add_column('Orders', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('Orders', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('Orders', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.add_column('Users', sa.Column('is_archived', sa.Boolean(), nullable=True))
    op.drop_column('Users', 'is_archieved')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Users', sa.Column('is_archieved', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.drop_column('Users', 'is_archived')
    op.drop_column('Orders', 'is_archived')
    op.drop_column('Orders', 'updated_at')
    op.drop_column('Orders', 'created_at')
    op.add_column('Modules', sa.Column('is_archieved', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.drop_column('Modules', 'is_archived')
    op.add_column('Lectures', sa.Column('is_archieved', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.drop_column('Lectures', 'is_archived')
    op.drop_column('Enrollments', 'is_archived')
    op.drop_column('Courses', 'is_archived')
    op.add_column('Coupons', sa.Column('is_archieved', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.drop_column('Coupons', 'is_archived')
    op.create_table('Payments',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('course_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_amount', mysql.FLOAT(), nullable=True),
    sa.Column('transaction_id', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('indent_id', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('payment_status', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('session_status', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.Column('created_by', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('updated_by', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('archived', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['Courses.id'], name='Payments_ibfk_1'),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name='Payments_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('transaction_id', 'Payments', ['transaction_id'], unique=True)
    op.create_index('indent_id', 'Payments', ['indent_id'], unique=True)
    # ### end Alembic commands ###
